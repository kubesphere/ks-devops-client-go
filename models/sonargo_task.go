// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// SonargoTask sonargo task
//
// swagger:model sonargo.Task
type SonargoTask struct {

	// analysis Id
	AnalysisID string `json:"analysisId,omitempty"`

	// component Id
	ComponentID string `json:"componentId,omitempty"`

	// component key
	ComponentKey string `json:"componentKey,omitempty"`

	// component name
	ComponentName string `json:"componentName,omitempty"`

	// component qualifier
	ComponentQualifier string `json:"componentQualifier,omitempty"`

	// error message
	ErrorMessage string `json:"errorMessage,omitempty"`

	// error stacktrace
	ErrorStacktrace string `json:"errorStacktrace,omitempty"`

	// error type
	ErrorType string `json:"errorType,omitempty"`

	// executed at
	ExecutedAt string `json:"executedAt,omitempty"`

	// execution time ms
	ExecutionTimeMs int64 `json:"executionTimeMs,omitempty"`

	// finished at
	FinishedAt string `json:"finishedAt,omitempty"`

	// has error stacktrace
	HasErrorStacktrace bool `json:"hasErrorStacktrace,omitempty"`

	// has scanner context
	HasScannerContext bool `json:"hasScannerContext,omitempty"`

	// id
	ID string `json:"id,omitempty"`

	// logs
	Logs bool `json:"logs,omitempty"`

	// organization
	Organization string `json:"organization,omitempty"`

	// scanner context
	ScannerContext string `json:"scannerContext,omitempty"`

	// started at
	StartedAt string `json:"startedAt,omitempty"`

	// status
	Status string `json:"status,omitempty"`

	// submitted at
	SubmittedAt string `json:"submittedAt,omitempty"`

	// submitter login
	SubmitterLogin string `json:"submitterLogin,omitempty"`

	// task type
	TaskType string `json:"taskType,omitempty"`

	// type
	Type string `json:"type,omitempty"`

	// warning count
	WarningCount int32 `json:"warningCount,omitempty"`

	// warnings
	Warnings []string `json:"warnings"`
}

// Validate validates this sonargo task
func (m *SonargoTask) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this sonargo task based on context it is used
func (m *SonargoTask) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *SonargoTask) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *SonargoTask) UnmarshalBinary(b []byte) error {
	var res SonargoTask
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
