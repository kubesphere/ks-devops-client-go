// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// V1alpha3JWTToken v1alpha3 j w t token
//
// swagger:model v1alpha3.JWTToken
type V1alpha3JWTToken struct {

	// exp
	Exp int64 `json:"exp,omitempty"`

	// iat
	// Required: true
	Iat *int64 `json:"iat"`

	// id
	ID string `json:"id,omitempty"`
}

// Validate validates this v1alpha3 j w t token
func (m *V1alpha3JWTToken) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateIat(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *V1alpha3JWTToken) validateIat(formats strfmt.Registry) error {

	if err := validate.Required("iat", "body", m.Iat); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this v1alpha3 j w t token based on context it is used
func (m *V1alpha3JWTToken) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *V1alpha3JWTToken) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *V1alpha3JWTToken) UnmarshalBinary(b []byte) error {
	var res V1alpha3JWTToken
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
