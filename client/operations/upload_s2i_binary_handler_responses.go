// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/kubesphere/ks-devops-client-go/models"
)

// UploadS2iBinaryHandlerReader is a Reader for the UploadS2iBinaryHandler structure.
type UploadS2iBinaryHandlerReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UploadS2iBinaryHandlerReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUploadS2iBinaryHandlerOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		return nil, runtime.NewAPIError("[PUT /kapis/devops.kubesphere.io/v1alpha2/namespaces/{namespace}/s2ibinaries/{s2ibinary}/file] UploadS2iBinaryHandler", response, response.Code())
	}
}

// NewUploadS2iBinaryHandlerOK creates a UploadS2iBinaryHandlerOK with default headers values
func NewUploadS2iBinaryHandlerOK() *UploadS2iBinaryHandlerOK {
	return &UploadS2iBinaryHandlerOK{}
}

/*
UploadS2iBinaryHandlerOK describes a response with status code 200, with default header values.

ok
*/
type UploadS2iBinaryHandlerOK struct {
	Payload *models.V1alpha1S2iBinary
}

// IsSuccess returns true when this upload s2i binary handler o k response has a 2xx status code
func (o *UploadS2iBinaryHandlerOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this upload s2i binary handler o k response has a 3xx status code
func (o *UploadS2iBinaryHandlerOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this upload s2i binary handler o k response has a 4xx status code
func (o *UploadS2iBinaryHandlerOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this upload s2i binary handler o k response has a 5xx status code
func (o *UploadS2iBinaryHandlerOK) IsServerError() bool {
	return false
}

// IsCode returns true when this upload s2i binary handler o k response a status code equal to that given
func (o *UploadS2iBinaryHandlerOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the upload s2i binary handler o k response
func (o *UploadS2iBinaryHandlerOK) Code() int {
	return 200
}

func (o *UploadS2iBinaryHandlerOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /kapis/devops.kubesphere.io/v1alpha2/namespaces/{namespace}/s2ibinaries/{s2ibinary}/file][%d] uploadS2iBinaryHandlerOK %s", 200, payload)
}

func (o *UploadS2iBinaryHandlerOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /kapis/devops.kubesphere.io/v1alpha2/namespaces/{namespace}/s2ibinaries/{s2ibinary}/file][%d] uploadS2iBinaryHandlerOK %s", 200, payload)
}

func (o *UploadS2iBinaryHandlerOK) GetPayload() *models.V1alpha1S2iBinary {
	return o.Payload
}

func (o *UploadS2iBinaryHandlerOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.V1alpha1S2iBinary)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
