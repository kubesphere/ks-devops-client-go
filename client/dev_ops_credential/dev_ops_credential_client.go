// Code generated by go-swagger; DO NOT EDIT.

package dev_ops_credential

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	httptransport "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// New creates a new dev ops credential API client.
func New(transport runtime.ClientTransport, formats strfmt.Registry) ClientService {
	return &Client{transport: transport, formats: formats}
}

// New creates a new dev ops credential API client with basic auth credentials.
// It takes the following parameters:
// - host: http host (github.com).
// - basePath: any base path for the API client ("/v1", "/v3").
// - scheme: http scheme ("http", "https").
// - user: user for basic authentication header.
// - password: password for basic authentication header.
func NewClientWithBasicAuth(host, basePath, scheme, user, password string) ClientService {
	transport := httptransport.New(host, basePath, []string{scheme})
	transport.DefaultAuthentication = httptransport.BasicAuth(user, password)
	return &Client{transport: transport, formats: strfmt.Default}
}

// New creates a new dev ops credential API client with a bearer token for authentication.
// It takes the following parameters:
// - host: http host (github.com).
// - basePath: any base path for the API client ("/v1", "/v3").
// - scheme: http scheme ("http", "https").
// - bearerToken: bearer token for Bearer authentication header.
func NewClientWithBearerToken(host, basePath, scheme, bearerToken string) ClientService {
	transport := httptransport.New(host, basePath, []string{scheme})
	transport.DefaultAuthentication = httptransport.BearerToken(bearerToken)
	return &Client{transport: transport, formats: strfmt.Default}
}

/*
Client for dev ops credential API
*/
type Client struct {
	transport runtime.ClientTransport
	formats   strfmt.Registry
}

// ClientOption may be used to customize the behavior of Client methods.
type ClientOption func(*runtime.ClientOperation)

// ClientService is the interface for Client methods
type ClientService interface {
	CreateCredential(params *CreateCredentialParams, opts ...ClientOption) (*CreateCredentialOK, error)

	DeleteCredential(params *DeleteCredentialParams, opts ...ClientOption) (*DeleteCredentialOK, error)

	GetCredential(params *GetCredentialParams, opts ...ClientOption) (*GetCredentialOK, error)

	GetProjectCredentialUsage(params *GetProjectCredentialUsageParams, opts ...ClientOption) (*GetProjectCredentialUsageOK, error)

	ListCredential(params *ListCredentialParams, opts ...ClientOption) (*ListCredentialOK, error)

	UpdateCredential(params *UpdateCredentialParams, opts ...ClientOption) (*UpdateCredentialOK, error)

	SetTransport(transport runtime.ClientTransport)
}

/*
CreateCredential creates the credential of the specified devops for the current user
*/
func (a *Client) CreateCredential(params *CreateCredentialParams, opts ...ClientOption) (*CreateCredentialOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewCreateCredentialParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "CreateCredential",
		Method:             "POST",
		PathPattern:        "/kapis/devops.kubesphere.io/v1alpha3/namespaces/{devops}/credentials",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &CreateCredentialReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*CreateCredentialOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for CreateCredential: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
DeleteCredential deletes the credential of the specified devops for the current user
*/
func (a *Client) DeleteCredential(params *DeleteCredentialParams, opts ...ClientOption) (*DeleteCredentialOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewDeleteCredentialParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "DeleteCredential",
		Method:             "DELETE",
		PathPattern:        "/kapis/devops.kubesphere.io/v1alpha3/namespaces/{devops}/credentials/{credential}",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &DeleteCredentialReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*DeleteCredentialOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for DeleteCredential: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
GetCredential gets the credential of the specified devops for the current user
*/
func (a *Client) GetCredential(params *GetCredentialParams, opts ...ClientOption) (*GetCredentialOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetCredentialParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "GetCredential",
		Method:             "GET",
		PathPattern:        "/kapis/devops.kubesphere.io/v1alpha3/namespaces/{devops}/credentials/{credential}",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &GetCredentialReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*GetCredentialOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for GetCredential: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
GetProjectCredentialUsage gets the specified credential usage of the dev ops project
*/
func (a *Client) GetProjectCredentialUsage(params *GetProjectCredentialUsageParams, opts ...ClientOption) (*GetProjectCredentialUsageOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetProjectCredentialUsageParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "GetProjectCredentialUsage",
		Method:             "GET",
		PathPattern:        "/kapis/devops.kubesphere.io/v1alpha2/namespaces/{devops}/credentials/{credential}/usage",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &GetProjectCredentialUsageReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*GetProjectCredentialUsageOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for GetProjectCredentialUsage: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
ListCredential lists the credentials of the specified devops for the current user
*/
func (a *Client) ListCredential(params *ListCredentialParams, opts ...ClientOption) (*ListCredentialOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewListCredentialParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "ListCredential",
		Method:             "GET",
		PathPattern:        "/kapis/devops.kubesphere.io/v1alpha3/namespaces/{devops}/credentials",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &ListCredentialReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*ListCredentialOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for ListCredential: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
UpdateCredential puts the credential of the specified devops for the current user
*/
func (a *Client) UpdateCredential(params *UpdateCredentialParams, opts ...ClientOption) (*UpdateCredentialOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewUpdateCredentialParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "UpdateCredential",
		Method:             "PUT",
		PathPattern:        "/kapis/devops.kubesphere.io/v1alpha3/namespaces/{devops}/credentials/{credential}",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &UpdateCredentialReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*UpdateCredentialOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for UpdateCredential: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

// SetTransport changes the transport on the client
func (a *Client) SetTransport(transport runtime.ClientTransport) {
	a.transport = transport
}
